{"version":3,"sources":["components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["App","useState","createresu","setCreateresu","resu","setResu","apiUrl","useEffect","a","axios","get","result","console","log","data","idnomber","like","bool","fetchData","resetTextField","updateLike","id","newValue","map","item","patch","Fragment","Container","maxWidth","Typography","style","fontFamily","textAlign","fontSize","CssBaseline","onSubmit","event","post","content","then","response","time","preventDefault","Input","type","name","value","placeholder","onChange","target","Button","variant","color","List","component","Paper","marginBottom","display","paddingRight","paddingLeft","size","onClick","Todo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVA6HeA,MAhHf,WAAkB,IAAD,EACqBC,mBAAS,IAD9B,mBACRC,EADQ,KACIC,EADJ,OAESF,mBAAS,IAFlB,mBAERG,EAFQ,KAEFC,EAFE,KAGTC,EAAS,8BAmBfC,qBAAU,WAAQ,4CAChB,4BAAAC,EAAA,sEACuBC,IAAMC,IAAIJ,GADjC,OACQK,EADR,OAEIC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAOG,MACP,CAAC,CAACC,SAAU,EAAGC,KAAM,EAAGC,MAAM,GAAO,CAACF,SAAS,EAAGC,KAAM,EAAEC,MAAK,IAE3EZ,EAAQM,EAAOG,MANnB,4CADgB,uBAAC,WAAD,wBASdI,KACG,IAEP,IAAMC,EAAiB,WACrBhB,EAAc,KAGViB,EAAU,uCAAG,WAAOC,GAAP,eAAAb,EAAA,sDACXc,EAAWlB,EAAKmB,KAAI,SAAAC,GAoBxB,OAnBGA,EAAKT,WAAaM,IACH,MAAbG,EAAKP,MACNR,IAAMgB,MAAMnB,EAAO,IAAD,OAAKe,GACvB,CACEL,KAAM,IAGRQ,EAAKR,MAAQ,EACbQ,EAAKP,KAAO,IAEZR,IAAMgB,MAAMnB,EAAO,IAAD,OAAKe,GACvB,CACEL,KAAM,IAGRQ,EAAKR,MAAQ,EACbQ,EAAKP,KAAO,OAGTO,KAETnB,EAAQiB,GAvBS,2CAAH,sDA0BhB,OACE,cAAC,IAAMI,SAAP,UACE,eAACC,EAAA,EAAD,CAAYC,SAAS,KAArB,UACA,cAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,WAAY,UAAWC,UAAU,SAASC,SAAU,QAAxE,uBAGE,cAACC,EAAA,EAAD,IACE,uBAAMC,SAnES,SAACC,GACtB3B,IAAM4B,KAAK/B,EACT,CACEgC,QAASpC,IAETqC,MAAK,SAAAC,GACP5B,QAAQC,IAAI,wBAAyB2B,EAAS1B,MAC9CT,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAChBW,SAAUyB,EAAS1B,KAAKC,SACxBuB,QAASE,EAAS1B,KAAKwB,QACvBG,KAAMD,EAAS1B,KAAK2B,KACpBzB,KAAMwB,EAAS1B,KAAKE,SAEtBG,OAEFiB,EAAMM,kBAoDA,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,UACLC,MAAO5C,EACP6C,YAAY,aACZC,SAAU,SAAAZ,GAAK,OAAIjC,EAAciC,EAAMa,OAAOH,UAEhD,cAACI,EAAA,EAAD,CACEN,KAAK,SACLO,QAAQ,YACRC,MAAM,OAHR,6BAQF,cAACC,EAAA,EAAD,CACAC,UAAU,KADV,SAGGlD,EAAKmB,KAAI,SAAAC,GAAI,OACZ,eAAC+B,EAAA,EAAD,CAA6BzB,MAAO,CAAC0B,aAAc,OAAnD,UACA,sBAAK1B,MAAO,CAAC2B,QAAQ,QAArB,UACE,cAAC5B,EAAA,EAAD,CAAYC,MAAO,CAACG,SAAU,OAAQyB,aAAc,MAAOC,YAAa,OAAxE,SACGnC,EAAKT,WAEN,cAACc,EAAA,EAAD,CAAYuB,MAAM,iBAAiBtB,MAAO,CAACG,SAAU,QAArD,SACCT,EAAKiB,UAGR,eAACZ,EAAA,EAAD,CAAYyB,UAAU,MAAtB,UACG9B,EAAKc,QACN,cAAC,IAAD,CAAWc,MAAO5B,EAAKP,KAAO,MAAQ,OAAQ2C,KAAM,GAAIC,QAAS,kBAAMzC,EAAWI,EAAKT,aACtFS,EAAKR,UAZIQ,EAAKT,qB,MCpGlB,SAASf,IACtB,OACI,cAAC8D,EAAD,ICNN,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.425defd0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { HeartFill } from 'react-bootstrap-icons';\nimport axios from 'axios';\nimport {\n  Button,\n  Container,\n  CssBaseline,\n  List,\n  Input,\n  } from '@material-ui/core';\n  import Paper from '@mui/material/Paper';\n  import Typography from '@mui/material/Typography'\n\nfunction App ()  {\n  const [createresu, setCreateresu] = useState(\"\");\n  const [resu, setResu] = useState([]);\n  const apiUrl = \"http://localhost:3000/sures\";\n  const createresponse = (event) => {\n    axios.post(apiUrl,\n      {\n        content: createresu\n      }\n      ).then(response => {\n      console.log(\"registration response\", response.data)\n      setResu([...resu, {\n        idnomber: response.data.idnomber,\n        content: response.data.content,\n        time: response.data.time,\n        like: response.data.like\n      }])\n      resetTextField()\n    })\n    event.preventDefault()\n  }\n\n  useEffect(()  =>  {\n    async function fetchData()  {\n      const result = await axios.get(apiUrl);\n        console.log(result);\n        console.log(result.data);\n        const foo = [{idnomber: 1, like: 0, bool: false},{idnomber:2, like: 0,bool:false}];\n        //setResu(foo);\n        setResu(result.data)\n      }\n      fetchData();\n      }, []);\n\n  const resetTextField = () => {\n    setCreateresu('')\n  }\n\n  const updateLike = async (id) => {\n    const newValue = resu.map(item => {\n      if(item.idnomber === id){\n        if(item.bool == null){\n          axios.patch(apiUrl+`/${id}`,\n          {\n            like: 1\n          }\n          );\n          item.like += 1;\n          item.bool = 1\n        }else {\n          axios.patch(apiUrl+`/${id}`,\n          {\n            like: 2\n          }\n          );\n          item.like -= 1;\n          item.bool = null\n        }\n      }\n      return item;\n    });\n    setResu(newValue);\n  };\n\n  return (\n    <React.Fragment>\n      <Container  maxWidth='xs'>\n      <Typography style={{fontFamily: 'Monoton', textAlign:'center',fontSize: '30px'}}>\n      3 Channel\n      </Typography>\n        <CssBaseline/>\n          <form onSubmit={createresponse}>\n            <Input\n              type=\"text\"\n              name=\"content\"\n              value={createresu}\n              placeholder=\"Enter text\"\n              onChange={event => setCreateresu(event.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              variant='contained'\n              color='text'\n            >\n                投稿\n            </Button>\n          </form>\n          <List\n          component='ul'\n          >\n            {resu.map(item => (\n              <Paper key = {item.idnomber} style={{marginBottom: '9px'}}>\n              <div style={{display:\"flex\"}}>\n                <Typography style={{fontSize: '17px', paddingRight: '9px', paddingLeft: '5px'}}>\n                  {item.idnomber}\n                  </Typography>\n                  <Typography color=\"text.secondary\" style={{fontSize: '14px'}}>\n                  {item.time}\n                </Typography>\n              </div>\n                <Typography component=\"div\">\n                  {item.content}\n                  <HeartFill color={item.bool ? 'red' : 'gray'} size={16} onClick={() => updateLike(item.idnomber)}/>\n                  {item.like}\n                </Typography>\n              </Paper>\n            ))}\n          </List>\n      </Container>\n    </React.Fragment>\n  );\n}\nexport default App;\n","import React from 'react';\nimport Todo from './components/Todo'\nimport './App.css';\n\nexport default function App() {\n  return (\n      <Todo/>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}